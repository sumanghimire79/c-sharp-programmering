// <auto-generated />
using System;
using ItemLendSystemWithLogin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItemLendSystemWithLogin.Migrations.System_DB
{
    [DbContext(typeof(ItemLendSystemwithLogin_systemDB))]
    partial class ItemLendSystemwithLogin_systemDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Borrower", b =>
                {
                    b.Property<int>("BID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BID");

                    b.ToTable("Borrowers");

                    b.HasData(
                        new
                        {
                            BID = 1,
                            Email = "jiwan@test.dk",
                            Mobile = "3333333",
                            Name = "sher"
                        },
                        new
                        {
                            BID = 2,
                            Email = "lovely@test.dk",
                            Mobile = "44444444",
                            Name = "jiwan"
                        },
                        new
                        {
                            BID = 3,
                            Email = "lost@test.dk",
                            Mobile = "66666666",
                            Name = "Lasse"
                        });
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.ContactForm", b =>
                {
                    b.Property<int>("CFID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CFID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CFID");

                    b.ToTable("contactForm");

                    b.HasData(
                        new
                        {
                            CFID = 1,
                            Email = "testContactEmail@seed.dk",
                            Message = "0.This is test seed message",
                            Name = "testName"
                        },
                        new
                        {
                            CFID = 2,
                            Email = "testContactEmail@seed1.dk",
                            Message = "1.This is test seed message",
                            Name = "testName2"
                        },
                        new
                        {
                            CFID = 3,
                            Email = "testContactEmail@seed2.dk",
                            Message = "2.This is test seed message",
                            Name = "testName3"
                        });
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Item", b =>
                {
                    b.Property<int>("IID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IID"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OID")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("IID");

                    b.HasIndex("OID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            IID = 1,
                            Category = 0,
                            Description = "all in one bore maskine",
                            Name = "Bose bore maskine",
                            OID = 1,
                            UnitPrice = 300.0
                        },
                        new
                        {
                            IID = 2,
                            Category = 1,
                            Description = "reusable party plate",
                            Name = "plastic plate",
                            OID = 2,
                            UnitPrice = 5.0
                        },
                        new
                        {
                            IID = 3,
                            Category = 2,
                            Description = "light tent for summer",
                            Name = "tent",
                            OID = 3,
                            UnitPrice = 500.0
                        });
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Lend", b =>
                {
                    b.Property<int>("LID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LID"), 1L, 1);

                    b.Property<int>("BID")
                        .HasColumnType("int");

                    b.Property<int>("IID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LendingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LendingDays")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("LID");

                    b.HasIndex("BID");

                    b.HasIndex("IID");

                    b.ToTable("Lends");

                    b.HasData(
                        new
                        {
                            LID = 1,
                            BID = 1,
                            IID = 1,
                            LendingDate = new DateTime(2023, 11, 2, 18, 51, 29, 232, DateTimeKind.Local).AddTicks(3858),
                            LendingDays = 1,
                            Note = " thank you for the support.",
                            Quantity = 10
                        },
                        new
                        {
                            LID = 2,
                            BID = 2,
                            IID = 2,
                            LendingDate = new DateTime(2023, 11, 2, 18, 51, 29, 232, DateTimeKind.Local).AddTicks(3902),
                            LendingDays = 3,
                            Note = " thank you for the Lending.",
                            Quantity = 20
                        },
                        new
                        {
                            LID = 3,
                            BID = 1,
                            IID = 3,
                            LendingDate = new DateTime(2023, 11, 2, 18, 51, 29, 232, DateTimeKind.Local).AddTicks(3906),
                            LendingDays = 2,
                            Note = " thank you for the great support.",
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Owner", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OID");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OID = 1,
                            Email = "testexam@test.dk",
                            Mobile = "27859433",
                            Name = "Lasse"
                        },
                        new
                        {
                            OID = 2,
                            Email = "suman@test.dk",
                            Mobile = "42308933",
                            Name = "Suman"
                        },
                        new
                        {
                            OID = 3,
                            Email = "ram@test.dk",
                            Mobile = "12345678",
                            Name = "Ram"
                        });
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Item", b =>
                {
                    b.HasOne("ItemLendSystemWithLogin.Models.Owner", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Lend", b =>
                {
                    b.HasOne("ItemLendSystemWithLogin.Models.Borrower", "Borrower")
                        .WithMany("Lends")
                        .HasForeignKey("BID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItemLendSystemWithLogin.Models.Item", "Item")
                        .WithMany("Lends")
                        .HasForeignKey("IID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Borrower", b =>
                {
                    b.Navigation("Lends");
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Item", b =>
                {
                    b.Navigation("Lends");
                });

            modelBuilder.Entity("ItemLendSystemWithLogin.Models.Owner", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
